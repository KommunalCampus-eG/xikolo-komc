= render Global::Callout.new(t(:'peer_assessment.administration.steps.initial_setup'), title: t(:'peer_assessment.administration.steps.title')) do
  ul
    - I18n.t(:'peer_assessment.administration.steps.setup_info').each do |v|
      li == v

.mt30
form#select-steps-form.form-inline.pa-rt-generic method="post" action=setup_peer_assessment_steps_path(@assessment.id)
  input name="authenticity_token" type="hidden" value=form_authenticity_token
  - @steps.each do |step|
    .checkbox.mr10
      label
        - if !step.is_a?(Xikolo::PeerAssessment::Training) && !step.is_a?(Xikolo::PeerAssessment::SelfAssessment)
          input type="checkbox" name=step.class id=step.class disabled="disabled" checked="checked"
          span.ml5 = t :"peer_assessment.administration.steps.step_names.#{step.class}"
        - else
          input.mr5 type="checkbox" name=step.class id=step.class
          span.ml5 = t :"peer_assessment.administration.steps.step_names.#{step.class}"

= @assessment_presenter.pa_button(current_user, :create_workflow_steps)

javascript:
  ready(function() {
      $('form#select-steps-form').submit(function (e, params) {
          var localParams = params || {};

          if (!localParams.send) {
              e.preventDefault();
          }
          xuiSwal.fire({
              title: I18n.t('peer_assessment.administration.steps.setup_warning.title'),
              text: I18n.t('peer_assessment.administration.steps.setup_warning.text'),
              type: "warning",
              confirmButtonText: I18n.t('peer_assessment.administration.steps.setup_warning.confirm'),
              cancelButtonText: I18n.t('global.cancel')
          }).then(function(result) {
              if (result.value) {
                  $(e.currentTarget).trigger(e.type, {'send': true});
              }
          });
      });
  });
