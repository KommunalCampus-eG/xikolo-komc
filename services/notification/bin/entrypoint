#!/usr/bin/bash
# shellcheck shell=bash

# Abort script if any step fails. This ensures errors are detected and
# we do not start an only partially working application.
set -e

CMD="${1:-"server"}"
case "$CMD" in

sh | bash)
  set -- "$@"
  ;;

msgr)
  shift
  echo "[INFO] Starting msgr AMQP messages consumer..."
  set -- bundle exec msgr --environment production
  ;;

sidekiq)
  shift
  echo "[INFO] Starting sidekiq worker..."
  export CONCURRENCY="${SIDEKIQ_CONCURRENCY:-8}"
  export RAILS_MAX_THREADS="${CONCURRENCY}"
  set -- bundle exec sidekiq --timeout 80 --concurrency "${CONCURRENCY}"
  ;;

server)
  shift
  echo "[INFO] Starting application server..."
  export WORKERS="${PUMA_WORKERS:-1}"
  export CONCURRENCY="${PUMA_CONCURRENCY:-16}"
  export RAILS_MAX_THREADS="${CONCURRENCY}"
  set -- bundle exec puma --config config/puma.production.rb --bind tcp://0.0.0.0:3000 "$@"
  ;;
esac

(
  set -x
  exec "$@"
)
