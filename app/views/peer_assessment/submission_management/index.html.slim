= render 'peer_assessment/shared/assessment_title'

.col-md-12.mb40
  a.col-md-3.col-xs-12.col-sm-6.mb10.btn.btn-sm.btn-gray-darker href=course_peer_assessments_path(@promises[:course].course_code)
    = t(:'peer_assessment.conflict.back_to_overview')
  .col-md-9.submission-management__forms
    form.inline-block.mr15#direct-search-form method="get" action="#{peer_assessment_submission_management_index_path short_uuid(@assessment.id)}/" target="_blank"
      input#id-input name="id" value="" required="required" placeholder="Referral ID"
      button.btn.btn-primary.btn-sm.noborder type="submit"
        = t(:'peer_assessment.conflict.search_by_referral')

    form.inline-block.mr15 method="get" action=peer_assessment_submission_management_index_path(short_uuid(@assessment.id))
      input name="user_filter" value=params[:user_filter] required="required" placeholder=t(:'peer_assessment.submission_management.user_filter.placeholder')
      button.btn.btn-primary.btn-sm.noborder type="submit"
        = t(:'peer_assessment.submission_management.user_filter.submit')
    - if @assessment.is_team_assessment
      .custom-select-group.custom-select-group--sm.inline-block
        form.mr15 method="get" label="team_filter" action=peer_assessment_submission_management_index_path(short_uuid(@assessment.id))
          = select_tag 'team_filter',
            options_for_select(team_options(@assessment.course_id), params[:team_filter]),
            prompt: t(:'peer_assessment.submission_management.team_filter.placeholder'),
            data: {behavior: 'custom-select'}
          button.btn.btn-primary.btn-sm.noborder type="submit"
            = t(:'peer_assessment.submission_management.team_filter.submit')
    form.inline-block.mr15 method="get" action=peer_assessment_submission_management_index_path(short_uuid(@assessment.id))
      button.btn.btn-primary.btn-sm.noborder type="submit"
        = t(:'peer_assessment.submission_management.filter_reset')
  .clearfix
  .mb30

.col-md-6
  table.table.table-compact
    tbody
      tr
        td = t(:'peer_assessment.submission_management.available_submissions')
        td = @statistic.available_submissions
      tr
        td = t(:'peer_assessment.submission_management.final_submissions')
        td = @statistic.submitted_submissions
      tr
        td = t(:'peer_assessment.submission_management.nominated_submissions')
        td = @statistic.nominations
      - unless @assessment.gallery_entries.empty?
        tr
          td = t(:'peer_assessment.submission_management.gallery_entries')
          td = @assessment.gallery_entries.size

= render(partial: 'generate_gallery', locals: {gallery_presenter: @gallery_presenter, user: @current_user})

.col-md-12.mb40
  .p10.white-bg
    form.vmiddle action=request.path method="get"
      label for="per_page"
        = t(:'peer_assessment.submission_management.per_page_limit')
      input.input-sm.text-align-center.ml5.vmiddle id="per_page" name="per_page" value="#{params[:per_page] || 30}" type="number" max="50" min="1"

      span.vmiddle.ml10
        span.mr5 = t(:'peer_assessment.submission_management.order_by')
        = select_tag 'first', options_for_select(sort_options, params[:first]), prompt: t(:'peer_assessment.submission_management.none')
        span.mr5

        span.mr5 = t(:'peer_assessment.submission_management.then')
        = select_tag 'second', options_for_select(sort_options, params[:second]), prompt: t(:'peer_assessment.submission_management.none')
        span.mr5

        span.mr5 = t(:'peer_assessment.submission_management.then')
        = select_tag 'third', options_for_select(sort_options, params[:third]), prompt: t(:'peer_assessment.submission_management.none')

      span.vmiddle.ml10
        label
          input type="checkbox" name="final_only" checked=params[:final_only].eql?('on')
          span.ml5.vmiddle = t(:'peer_assessment.submission_management.final_only')

      span.vmiddle.ml10
        label
          input type="checkbox" name="gallery_only" checked=params[:gallery_only].eql?('on')
          span.ml5.vmiddle = t(:'peer_assessment.submission_management.gallery_only')

      button.ml5.btn.btn-sm.btn-primary onclick="showLoading()" type="submit"
        = t(:'peer_assessment.submission_management.apply')

.col-md-12
  - if @submission_presenters.empty?
    = render Global::Callout.new(t(:'peer_assessment.submission_management.no_submissions'))

  - else
    table.table.table-hover.table-striped.table-condensed
      thead
        tr
          th = '#'
          th
          th = t(:'peer_assessment.submission_management.teams')
          th = t(:'peer_assessment.submission_management.user')
          th = t(:'peer_assessment.submission_management.submitted')
          th = t(:'peer_assessment.submission_management.allowed_in_gallery')
          th
            = t(:'peer_assessment.submission_management.average')
            - if params.value?('points')
              = render Global::FaIcon.new('sort', style: :solid, css_classes: 'ml5')
          th
            = t(:'peer_assessment.submission_management.average_rating')
            - if params.value?('avg_rating')
              = render Global::FaIcon.new('sort', style: :solid, css_classes: 'ml5')
          th
          th
            = t(:'peer_assessment.submission_management.nominations')
            - if params.value?('nominations')
              = render Global::FaIcon.new('sort', style: :solid, css_classes: 'ml5')
          th
          th
      tbody
        - @submission_presenters.each_with_index do |presenter, index|
          tr class=('success' if @user_votes.key?(presenter.shared_submission_id))
            td = "##{(index + (((params[:page].try(:to_i) || 1) - 1) * (params[:per_page].try(:to_i) || 30))) + 1}"
            td
              - if @assessment.gallery_entries.include?(presenter.shared_submission_id)
                span.xi-icon.fa-regular.fa-medal aria-label=t(:'peer_assessment.submission_management.gallery_include') data-tooltip=t(:'peer_assessment.submission_management.gallery_include')
            td = presenter.try(:team_name) || '-'
            td = presenter.user!.name
            td
              - if presenter.submitted
                = render Global::FaIcon.new('check')
            td
              - unless presenter.gallery_opt_out
                = render Global::FaIcon.new('check')
            td = presenter.base_points_from_grade
            td = render(partial: 'rating', locals: {presenter:})
            td = "#{presenter.votes} #{t :'peer_assessment.submission_management.votes'}"
            td = presenter.nominations
            td = presenter.view_submission_button(@current_user, short_uuid(@assessment.id))
            td
              - if @user_votes.key?(presenter.shared_submission_id)
                span.xi-icon.fa-icon.fa-regular.fa-check aria-label=t(:'peer_assessment.submission_management.your_vote', votes: @user_votes[presenter.shared_submission_id].rating) data-tooltip=t(:'peer_assessment.submission_management.your_vote', votes: @user_votes[presenter.shared_submission_id].rating)

    = will_paginate RestifyPaginationCollection.new(@pager_collection), renderer: PaginationRenderer
