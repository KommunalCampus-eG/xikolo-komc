- content_for :head_assets
  = javascript_include_tag 'result-box', crossorigin: 'anonymous', async: true, integrity: true, debug: false

#quiz-sidebar-wrapper
  .quiz-sidebar
    .quiz-sidebar-content
      .quiz-sidebar-meter
        = render Course::CircularProgress.new(my_result.percentage, "#{my_result.percentage}%")

      .mt15#total-points
        em.mr5 #{t :'quiz_submission.total'}:
        strong.primary-color #{t(:'quiz_submission.total_points', total_points: @submission.points.round(2), max_points: @quiz.max_points.round(2))}
        - unless @submission.fudge_points.zero?
          .primary-color #{t(:'quiz_submission.fudge_points', fudge_points: @submission.fudge_points)}

      - if my_proctoring
        hr.divider
        = t(:'dashboard.documents.proctoring_chart')

        - if my_proctoring.result.issues?
          = render 'shared/proctoring_chart', {proctoring_data: my_proctoring.result}

        .mb20 = render my_proctoring.status_callout

      hr.divider
      .mt5
        - if @quiz.current_unlimited_attempts
          em #{t :'quiz_submission.unlimited_attempts'}
        - else
          em #{t :'quiz_submission.remaining_attempts', remaining_attempts: @attempts.remaining_attempts_for_quiz(@quiz)}

        - if @attempts.attempts > 1
          .mt5
            em #{t(:'quiz_submission.your_submissions', submission_count: @attempts.attempts)}
          #submission_chart style='height:200px' data-chart-data=my_result.history_graph_data.to_a.to_json data-y-max='#{@quiz.max_points.round(2)}'
          .mt5
            label for='user_attempts'
              = t(:'quiz_submission.choose_submission')
            = select_tag 'user_attempts', options_for_select(my_result.submission_labels, params[:id]),
                                          class: 'input-sm form-control', data: {behavior: 'navigate-to-submission'}
