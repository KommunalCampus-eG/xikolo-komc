- if @current_user.allowed? 'peerassessment.peerassessment.edit'
  = render Global::Callout.new(t(:'peer_assessment.administration.files.info_text'))
  .row.mb30
    .col-md-5
      form.peer-assessment-upload.dropzone#assessment_upload method="POST" action=@file_upload.url enctype="multipart/form-data"
        - @file_upload.fields.each do |name, value|
          input type="hidden" name=name value=value
    .col-md-7#files
      = render 'peer_assessment/shared/files', files: @assessment.attachments, deletable: true, delete_path: remove_file_peer_assessment_path(@assessment.id)
- else
  .col-md-12
    = render 'peer_assessment/shared/files', files: @assessment.attachments, deletable: true, is_disabled: true, delete_path: remove_file_peer_assessment_path(@assessment.id)

javascript:
  ready(function () {
    if ($('#assessment_upload')) {
      var assessment_upload_dropzone = new Dropzone('#assessment_upload', {
        uploadMultiple: false,
        dictDefaultMessage: "#{t(:'peer_assessment.files.upload_default_message')}"
      });

      $('.js-delete-file').each(function (index, element) {
        register_deletion_handler(element, assessment_upload_dropzone);
      });

      assessment_upload_dropzone.on('sending', function (file, xhr, fd) {
        fd.append('key', "#{@file_upload.prefix}" + sanitize(file.name))
        fd.set('Content-Type', file.type)
      });

      assessment_upload_dropzone.on("success", function (file, responseText) {
        file.previewElement.className = "dz-preview dz-processing dz-image-preview";
        $.ajax({
          url: "#{upload_peer_assessment_path(@assessment.id)}",
          method: 'POST',
          data: {upload_uri: "upload://#{@file_upload.id}/" + sanitize(file.name)},
          success: function (data, status, xhr) {
            file.previewElement.className = "dz-preview dz-processing dz-success dz-image-preview";
            $('#files table').removeClass('hidden');
            $('#files tbody').append('<tr>' +
              '<td>' + sanitize(file.name) + '</td>' +
              '<td>' + humanFileSize(file.size) + '</td>' +
              '<td><a class="btn btn-primary btn-xs" href="' + data.upload.download_url + '" target="blank">Download</a>' +
              '<form accept-charset="UTF-8" action="/peer_assessments/#{@assessment.id}/remove_file" class="inline-block js-delete-file" data-confirm-message="' +
              '#{t(:'peer_assessment.submission.delete_file_message')}" enctype="multipart/form-data" method="post">' +
              '<div style="margin:0;padding:0;display:inline">' +
                '<input name="utf8" type="hidden" value="âœ“">' +
                '<input name="_method" type="hidden" value="delete">' +
                '<input name="authenticity_token" type="hidden" value="#{form_authenticity_token}">' +
              '</div>' +
              '<input id="file_id" name="file_id" type="hidden" value="' + data.upload.id + '">' +
              '<input id="peer_assessment_id" name="peer_assessment_id" type="hidden" value="#{@assessment.id}">' +
              '<button class="btn btn-xs btn-danger ml5" type="submit">#{t :'peer_assessment.submission.delete_file'}</button>' +
              '</form>' +
              '</td>' +
              '</tr>');

            register_deletion_handler($('#files form').last(), assessment_upload_dropzone, file);
          },
          error: function(xhr, textStatus, error) {
            file.previewElement.className = "dz-preview dz-processing dz-image-preview dz-error";
          }
        });
      });
    }
  });

  function humanFileSize(bytes) {
    var thresh = 1024;
    if (bytes < thresh) return bytes + ' B';
    var units = ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
    var u = -1;
    do {
      bytes /= thresh;
      ++u;
    } while (bytes >= thresh);
    return bytes.toFixed(1) + ' ' + units[u];
  }

  function register_deletion_handler(element, dropzone, file) {
    $(element).submit(function () {
      if (confirm($(this).data('confirm-message'))) {
        $(this).find('button').attr('disabled', 'disabled');

        $.post($(this).attr('action'), $(this).serialize(), function (data, status) {
          if (data.success) {
            $($(element).parents()[1]).remove();
          }

          $(this).find('button').removeAttr('disabled');

          if (file) {
            dropzone.removeFile(file);
          }
        }, 'json');
      }

      return false;
    });
  }
