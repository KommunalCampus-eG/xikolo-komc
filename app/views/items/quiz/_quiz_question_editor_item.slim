li.quiz-question-editor data-id="#{quiz_question.id}" data-url=move_course_section_item_quiz_question_path(id: quiz_question.id, item_id: item.id)
  .quiz-question-editor__header
    h2.quiz-question-editor__h2
      = t(:'items.quiz.question')
      =< index + 1

      span.label.label-info.uuid.ml10 hidden='true'
        = quiz_question.id

      - if params[:review_id] == quiz_question.id
        span.label.flash.flash--error.mr10
          = t(:'items.quiz.question_alert')
    .quiz-question-editor__actions
      = render Global::Pill.new(t(:"items.quiz.question_types.#{quiz_question.class.to_s.split('::').last.underscore}"), color: :note)
      = render Global::Pill.new("#{quiz_question.points} #{t(:'items.quiz.points')}")

      = render Global::ActionsDropdown.new(menu_side: 'right') do |c|
        - c.with_action do
          = link_to '#', data: {behavior: 'edit-quiz-question', question_id: quiz_question.id} do
            = t(:'items.quiz.edit_question')
            = render Global::FaIcon.new('pen-to-square', style: :solid)
        - c.with_action do
          = link_to move_course_section_item_quiz_question_path(position: :up, id: quiz_question.id, item_id: item.id), method: :post do
            = t(:'items.quiz.move_question_up')
            = render Global::FaIcon.new('up', style: :solid)
        - c.with_action do
          = link_to move_course_section_item_quiz_question_path(position: :down, id: quiz_question.id, item_id: item.id), method: :post do
            = t(:'items.quiz.move_question_down')
            = render Global::FaIcon.new('down', style: :solid)
        - c.with_action do
          = link_to move_course_section_item_quiz_question_path(position: :top, id: quiz_question.id, item_id: item.id), method: :post do
            = t(:'items.quiz.move_question_to_top')
            = render Global::FaIcon.new('arrow-up-to-line', style: :solid)
        - c.with_action do
          = link_to move_course_section_item_quiz_question_path(position: :bottom, id: quiz_question.id, item_id: item.id), method: :post do
            = t(:'items.quiz.move_question_to_bottom')
            = render Global::FaIcon.new('arrow-down-to-line', style: :solid)
        - c.with_destructive_action do
          = link_to course_section_item_quiz_question_path(id: quiz_question.id, item_id: item.id), method: :delete, data: {confirm: t(:'items.quiz.delete_question_confirm')} do
            = t(:'items.quiz.delete_question')
            = render Global::FaIcon.new('trash-can', style: :solid)

  .RenderedMarkdown
    == render_markdown(quiz_question.text, allow_tables: true)

  = render Global::DisclosureWidget.new(t(:'items.quiz.show_question_explanation'),
    expanded_summary: t(:'items.quiz.hide_question_explanation'),
    visible: quiz_question.explanation.present?)

    .RenderedMarkdown
      == render_markdown(quiz_question.explanation, allow_tables: true)

  .edit_form_quiz_wrapper id="edit_quiz_question_form_#{quiz_question.id}" style="display:none" data-ajax-url="#{edit_course_section_item_quiz_question_path(id: quiz_question.id, item_id: item.id)}"

  - unless quiz_question.is_a? Xikolo::Quiz::EssayQuestion
    div
      h5 = t(:'items.quiz.answers')
      - quiz_question.answers.each do |quiz_answer|
        = render partial: 'items/quiz/quiz_answer_editor_item', locals: {item:, quiz_answer:, quiz_question:}
      button.btn.btn-default.btn-outline.btn-sm type='button' id=quiz_question.id data-behavior='add-quiz-answer'
        = render Global::FaIcon.new('plus', css_classes: 'mr5')
        = t(:'items.quiz.add_answer')
      .add_form_quiz_question_wrapper id="add_quiz_question_form_#{quiz_question.id}" style="display:none"  data-ajax-url="#{new_course_section_item_quiz_question_quiz_answer_path(item_id: item.id, quiz_question_id: quiz_question.id)}"
