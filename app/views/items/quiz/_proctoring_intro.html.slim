- book_proctoring_link = link_to t(:'items.quiz.proctoring.book_certificate'),
    course_redeem_voucher_path(course_id: item.course_code, product: 'proctoring_smowl'), class: 'btn btn-outline btn-default btn-xs'

.proctoring-intro
  - if item.user_booked_proctoring?
    .proctoring-intro__callout
      = render Global::Callout.new(t(:'items.quiz.proctoring.certificate_booked.instructions'), type: :success, title:t(:'items.quiz.proctoring.certificate_booked.title') ) do
        p = t(:'items.quiz.proctoring.certificate_booked.exclusion_criteria')

  - elsif item.proctoring_upgrading_deadline_passed?
    .proctoring-intro__info
      = render Global::FaIcon.new('circle-info', style: :solid, css_classes: 'em1-2 vmiddle')
      span = t(:'items.quiz.proctoring.deadline_passed')

  - elsif !item.proctoring_upgrade_possible?
    .proctoring-intro__info
      = render Global::FaIcon.new('circle-info', style: :solid, css_classes: 'em1-2 vmiddle')
      span = t(:'items.quiz.proctoring.upgrade_not_possible')

  - elsif item.proctoring_upgrade_possible?
    .proctoring-intro__callout
      = render Global::Callout.new(t(:'items.quiz.proctoring.upgrade_information.info',
        {deadline: l(item.proctoring_upgrading_deadline, format: t(:'date.formats.short'))}), title: t(:'items.quiz.proctoring.upgrade_information.title')) do
        .proctoring-intro__btn
          = book_proctoring_link
        p = t(:'items.quiz.proctoring.upgrade_information.registration_periods_info')
