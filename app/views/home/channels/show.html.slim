- content_for :head_assets
  = javascript_include_tag 'home', crossorigin: 'anonymous', integrity: true, async: true, debug: false

.channel-container
  .hidden-xs
    - if @channel.logo_url
      .channel-logo
        = image_tag Imagecrop.transform(@channel.logo_url, height: 120), alt: ''

  - if @channel.mobile_visual_url
    .visible-xs.channel-xs
      = image_tag @channel.mobile_visual_url, alt: ''

  - if @channel.stage_items.count > 1
    .channel-carousel.hidden-xs
      .carousel.slide#channel-carousel data-ride='carousel'
        ol.carousel-indicators
          li.active data-target='#channel-carousel' data-slide-to='0'
          - for i in 1..(@channel.stage_items.count-1)
            li data-target='#channel-carousel' data-slide-to="#{i}"

        .carousel-inner role='listbox'
          - @channel.stage_items.each_with_index do |stage_item, i|
            .item class="#{'active' if i == 0}"
              = render partial: 'stage_item', locals: { stage_item: stage_item }

        a.left.carousel-control.invisible-to-xs href='#channel-carousel' role='button' data-slide='prev'
          span.icon-prev aria-hidden='true'
          span.sr-only
            = t :'channels.show.previous'
        a.right.carousel-control.invisible-to-xs href='#channel-carousel' role='button' data-slide='next'
          span.icon-next aria-hidden="true"
          span.sr-only
            = t :'channels.show.next'

  - elsif @channel.stage_items.count == 1
    .channel-carousel.hidden-xs
      .carousel.slide#channel-carousel
        .carousel-inner
          .item.active
            = render partial: 'stage_item', locals: {stage_item: @channel.stage_items.first}

  .channel-courses#channel-courses
    - if @channel.description.blank?
      h1.channel-title
        = @channel.name
    - else
      h1.channel-title
        span.hidden-xs
          = t(:'channels.show.about', name: @channel.name)
        span.visible-xs-block
          = @channel.name
      .channel-info.collapsible-container aria-expanded="false"
        .channel-explanation.RenderedMarkdown.collapsible-element.line-clamp
          == render_markdown(@channel.description, allow_tables: true)

        .collapsible-button-container
          a.btn-read-more.btn-collapsible href="#" aria-controls="collapsible-container"
            = t(:'global.read_more')
            = render Global::FaIcon.new('angles-down', css_classes: 'ml5')

          a.btn-read-less.btn-collapsible href="#" aria-controls="collapsible-container"
            = t(:'global.read_less')
            = render Global::FaIcon.new('angles-up', css_classes: 'ml5')

    - if @channel.info_link?
      .show-more-link
        = link_to @channel.info_link_url
          = @channel.info_link_label
          = render Global::FaIcon.new('circle-info')

    .course-list data-hide-on-submit='#course-list__content' data-show-on-submit='#course-list__loading'
      = render Home::Channel::FilterBar.new(user: current_user, results_count: @course_list.courses_count)

      #course-list__loading[hidden]
        = render State::Loading.new(t(:'course.courses.index.loading'))

      #course-list__content.course-list__content
        - if @categories.any?
          - @categories.each_with_index do |category, index|
            .course-group
              h2.category-title
                = category.title
              - if category.callout.present?
                = render Global::Callout.new category.callout
              .course-card-grid data-id = "category-#{index}"
                = render partial: 'home/courses/courses', locals: { courses: category.courses, enrollments: @enrollments }

              / Only self-paced courses are paginated so far, so there is a `next_page` for them.
              - if category.courses.respond_to?(:next_page) && category.courses.next_page.present?
                .load-more
                  = button_tag(type: 'button', class: 'btn btn-default btn-outline mb20 mt20', \
                    data: { behavior: 'load-more', current_page: category.courses.current_page, target: "category-#{index}", dispatch_event: "load-more:course-cards" }) do
                    = t(:'course.courses.index.load_more')
                  div data-id='load-more__indicator' hidden='true'
                    = render State::Loading.new
                  p data-id='load-more__error-message' hidden='true'
                    = t(:'course.courses.index.error')
        - else
          / Check if the course list has been filtered and only then show a call to action button to reset all filters.
          - if request.GET.empty?
            = render State::Empty.new(t(:'channels.show.empty_state'))
          - else
            = render State::Empty.new(t(:'channels.show.empty'))
              = link_to t(:'course.courses.index.action'), channel_path(@channel.code), \
                data: { 'hide-on-click': '#course-list__content', 'show-on-click': '#course-list__loading' }, \
                class: 'btn btn-primary mt10'
