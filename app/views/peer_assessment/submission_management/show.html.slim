= render 'peer_assessment/shared/assessment_title'

.col-md-12.mb40
  a.col-md-3.col-xs-12.col-sm-6.btn.btn-sm.btn-gray-darker.js-back-button href="#{peer_assessment_submission_management_index_path}" data-alternative-url="#{peer_assessment_submission_management_index_path}" = t :'peer_assessment.conflict.back_to_overview'

.col-md-6
  table.table.table-compact
    tbody
      tr
        td = t :'peer_assessment.submission_management.average'
        td = @submission.base_points_from_grade
      tr
        td = t :'peer_assessment.submission_management.nominations'
        td = @submission.nominations
      tr
        td = t :'peer_assessment.submission_management.average_rating'
        td = render 'rating', presenter: @submission
      tr
        td = t :'peer_assessment.submission_management.user'
        td.user
          = link_to @user.name, user_path(@submission.user_id), target: :blank
          a.ml10 href="mailto:#{@user.email}" = "(#{@user.email})"
      tr
        td = t :'peer_assessment.submission_management.submission_date'
        td = "#{@submission_created}"
      tr
        td = t :'peer_assessment.submission_management.refid'
        td.id = short_uuid(@submission.id)

.col-md-6
  = render 'peer_assessment/shared/display_student_submission', available_steps: @available_steps, submission_path: @submission_path, results_path: @results_path, self_assessment_path: @self_assessment_path, training_path: @training_path, peer_grading_path: @peer_grading_path, presenter: @display_student_submission_presenter

.col-md-12.mb40
  = render 'peer_assessment/shared/rendered_submission', submission: @submission, headline: t(:'peer_assessment.submission_management.submission_headline'), tpa: @assessment.is_team_assessment

  /TODO PA introduce new roles and rights
.col-md-12.mb40
  - if @current_user.allowed? 'peerassessment.submission.evaluate'
    h4 = t :'peer_assessment.submission_management.your_rating'
    hr.divider.slim
    = render Global::Callout.new(t(:'peer_assessment.submission_management.rating_info'))

    .center-text.em2.mt30#rating-stars
      - votes = @user_vote.try(:rating) || 0
      - 5.times do |i|
        span.xi-icon.cpointer.fa-star class="#{'ml10' if i > 0} fa-#{votes == 0 ? 'regular' : 'solid'}" data-value=i+1
        - votes = votes - 1 if votes > 0

    .center-text
      .em1-5
        strong#rating.mr5 = @user_vote.try(:rating) || 0

    .mt40
      form.js-submit-confirm.text-align-center[method="post"
        action="#{rate_peer_assessment_submission_management_path}"
        data-confirm-message="#{t :'peer_assessment.submission_management.confirm_rating_message'}"
        data-confirm-title="#{t :'peer_assessment.submission_management.confirm_rating_title'}"
        input type="hidden"
        name="origin"
        value="#{request.referer}"]
        - unless @submission_gallery_opt_out
          label
            input[type="checkbox"
              name="include_submission"
              id="include_submission"
              checked=(@assessment.gallery_entries.include?(@submission.shared_submission_id) ? 'checked' : false)]
            span.ml5 = t :'peer_assessment.submission_management.include_submission'
        - else
          span.ml5 = t :'peer_assessment.submission_management.opted_out_from_gallery'

        .mt30
        input name="authenticity_token" type="hidden" value="#{form_authenticity_token}"
        input#rating-value type="hidden" name="rating" value="#{@user_vote.try(:rating) || 0}"
        input type="hidden" name="existing_vote" value="#{@user_vote.try(:id) || ''}"

        button.col-md-2.col-md-offset-5.col-xs-offset-3.col-xs-6.btn.btn-primary.btn-sm type="submit" = t :'peer_assessment.results.rating.rate_button'
  /end if @current_user.allowed? 'peerassessment.submission.evaluate'

.col-md-12.mb40
  h4 = t :'peer_assessment.submission_management.metadata'
.col-md-12.mb40
  - if @rubric_matrix.nil? or @rubric_matrix.empty?
    table.table.table-compact.table-striped
      tbody
        tr
          td = t :'peer_assessment.submission_management.no_review_matrix'
  - else
    table.table.table-compact.table-striped
      tbody
        tr
          td = t :'peer_assessment.submission_management.review_details'
          - @available_rubrics_with_id.each do |_id, name|
            td = name
        - @rubric_matrix.each do |row|
          tr
            td
              = row.keys[0]
            - row.values[0].each do |rubric, points|
              td
                = points

.col-md-12
  table.table.table-compact
    tbody
      tr
        td == t :'peer_assessment.submission_management.received_reviews_meta'
        td
        td
          ol style="padding: 15px; margin: 0px"
            - @reviews_received.each do |rr|
              li
                = "#{rr[:deadline]} | #{rr[:grade]}"
                span.label.label-info.uuid.ml10 = "#{rr[:id]}"
                - if rr[:conflict]
                  span.label.label-warning.uuid.ml10 = t(:'peer_assessment.conflict.suspended')
      tr
        td == t :'peer_assessment.submission_management.written_reviews_meta'
        td
        td
          ol style="padding: 15px; margin: 0px"
            - @reviews_written.each do |rw|
              li
                = "#{rw[:deadline]} | #{rw[:step_type]} | #{rw[:grade]}"
                span.label.label-info.uuid.ml10 = "#{rw[:id]}"
                - if rw[:suspended]
                  span.label.label-warning.uuid.ml10 = t(:'peer_assessment.conflict.submission_reported')
                - elsif rw[:accused]
                  span.label.label-warning.uuid.ml10 = t(:'peer_assessment.conflict.review_reported')
      tr
        td == t :'peer_assessment.submission_management.additional_attempts.title'
        td == @submission.additional_attempts
        td
          form.inline-block.js-submit-confirm data-confirm-title="#{t :'peer_assessment.submission_management.additional_attempts.confirm_title'}" data-confirm-message="#{t :'peer_assessment.submission_management.additional_attempts.confirm_message'}" action="#{grant_attempt_peer_assessment_submission_management_path}" method="post"
            input name="authenticity_token" type="hidden" value="#{form_authenticity_token}"
            = @submission_management_presenter.provide_new_attempt_button(@current_user)

      tr
        td == t :'peer_assessment.submission_management.regrading_request.title'
        td
        td
          = @submission_management_presenter.trigger_regrading_button(@current_user)
          - unless @new_grading_conflict.nil?
            = simple_form_for(@new_grading_conflict,
                url: request_regrading_peer_assessment_submission_management_path(mode: 'teacherview', examined_user_id: @examined_user_id),
                html: {\
                  class: "form-horizontal mb20 hidden js-submit-confirm",
                  id: 'request-regrading-form',
                  data: {\
                    confirm_title: t(:'peer_assessment.submission_management.regrading_request.confirm_title'),
                    confirm_message: t(:'peer_assessment.submission_management.regrading_request.confirm_message'),
                  },
                }) do |f|
              .mt5.ml10
              = f.input :comment, as: :text, required: true, input_html: {rows: 2}, label: '', placeholder: t(:'peer_assessment.submission_management.regrading_request.placeholder')
              .row
                .col-lg-10.col-md-10
                  button.btn.btn-sm.btn-primary type="submit" = t :'peer_assessment.submission_management.regrading_request.button'
                  button#request-regrading-cancel.btn.btn-sm.btn-default.ml10 type="button" = t :'global.cancel'
